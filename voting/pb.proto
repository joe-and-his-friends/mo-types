// protoc --go_out=pb --go_opt=paths=source_relative --go-grpc_out=pb --go-grpc_opt=paths=source_relative pb.proto

syntax="proto3";

package voting;

option go_package = "./pb";

service Voting {
	rpc GetContest (GetContestRequest) returns (GetContestResponse) {}
	rpc PostContest (PostContestRequest) returns (PostContestResponse) {}
	rpc PutContest (PutContestRequest) returns (PutContestResponse) {}
	rpc DeleteContest (DeleteContestRequest) returns (DeleteContestResponse) {}
  rpc GetContests (GetContestsRequest) returns (GetContestsResponse) {}
	rpc GetActiveContest (GetActiveContestRequest) returns (GetActiveContestResponse) {}
  rpc PostContestCandidate (PostContestCandidateRequest) returns (PostContestCandidateResponse) {}
  rpc GetContestCandidates (GetContestCandidatesRequest) returns (GetContestCandidatesResponse) {}
	rpc GetContestCandidatesByVoterUserId (GetContestCandidatesByVoterUserIdRequest) returns (GetContestCandidatesByVoterUserIdResponse) {}
	rpc GetVoterUserProfilesByCandidateId (GetVoterUserProfilesByCandidateIdRequest) returns (GetVoterUserProfilesByCandidateIdResponse) {}
	rpc GetContestCandidate (GetContestCandidateRequest) returns (GetContestCandidateResponse) {}
	rpc PutContestCandidate (PutContestCandidateRequest) returns (PutContestCandidateResponse) {}
	rpc PutContestCandidateEnrollment (PutContestCandidateEnrollmentRequest) returns (PutContestCandidateEnrollmentResponse) {}
	rpc PutContestCandidateExtraNumberOfVotes (PutContestCandidateExtraNumberOfVotesRequest) returns (PutContestCandidateExtraNumberOfVotesResponse) {}
	rpc DeleteContestCandidate (DeleteContestCandidateRequest) returns (DeleteContestCandidateResponse) {}
	rpc PostVote (PostVoteRequest) returns (PostVoteResponse) {}
	rpc GetVotes (GetVotesRequest) returns (GetVotesResponse) {}
	rpc DeleteVote (DeleteVoteRequest) returns (DeleteVoteResponse) {}
}

message ContestEnrollment {
	int32 status = 1;
	string msg = 2;
}

message Contest {
	string id = 1;
	string name  = 2;
	string start_date = 3;
	string end_date = 4;
	string poster_url = 5;
	bool active = 6;
}

message UserProfile {
  string id = 1;
  string phone = 2;
  string email = 3;
  string name = 4;
  int32 role = 5;
  string avatar_url = 7;
  string family_name = 8;
  string given_name = 9;
  string apple_user_id = 10;
  string google_user_id = 11;
  string facebook_user_id = 12;
  // string password = 13;
  string referral_user_id = 14;
  int32 level = 15;
  string datetime_created = 16;
}

message GetContestRequest {
	string id = 1;
	string user_id = 2;
}
message GetContestResponse {
	Contest contest = 1;
}

message PostContestRequest {
	Contest contest = 1;
}
message PostContestResponse {
}

message PutContestRequest {
	Contest contest = 1;
}
message PutContestResponse {
}

message DeleteContestRequest {
	string id = 1;
}
message DeleteContestResponse {
}

message GetContestsRequest {
}

message GetContestsResponse {
	repeated Contest contests = 1;
}

message GetActiveContestRequest {
	string user_id = 1;
}

message GetActiveContestResponse {
	Contest contest = 1;
}

message VotingResult {
	int32 number_of_votes = 1;
	bool voted = 2;
}

message CandidateFilter {
	int32 enrollment_status = 1;
	string matching_text = 2;
}

message ContestCandidate {
  string id = 1;            
	string user_id = 2;
	string pet_id = 3;
	string pet_name = 4;        
	string pet_owner_name = 5;
	string pet_owner_phone = 6;
	string pet_photo_url = 7;
	string contest_id = 8;
	ContestEnrollment enrollment = 9;
	VotingResult voting_result = 10;
	string pet_sns_url = 11;
	int32 sequence = 12;
	int32 extra_number_of_votes = 13;
	int32 position = 14;
}

message PostContestCandidateRequest {
	ContestCandidate candidate = 1;
}

message PostContestCandidateResponse {
}

message GetContestCandidatesRequest {
  string contest_id = 1;
	string user_id = 2;
	CandidateFilter filter = 3;
	int32 page_size = 4;
	int32 page_number = 5;
}

message GetContestCandidatesResponse {
  repeated ContestCandidate candidates = 1;
}

message GetContestCandidatesByVoterUserIdRequest {
	string user_id = 1;
}
message GetContestCandidatesByVoterUserIdResponse {
  repeated ContestCandidate candidates = 1;
}
				
message GetVoterUserProfilesByCandidateIdRequest {
  string candidate_id = 1;
}
message GetVoterUserProfilesByCandidateIdResponse {
  repeated UserProfile profiles = 1;
}

message GetContestCandidateRequest {
  string contest_id = 1;
	string user_id = 2;
}

message GetContestCandidateResponse {
  ContestCandidate candidate = 1;
}

message PutContestCandidateRequest {
  ContestCandidate candidate = 1;
}
message PutContestCandidateResponse {}

message PutContestCandidateEnrollmentRequest {
	string id = 1;
  ContestEnrollment enrollment = 2;
}
message PutContestCandidateEnrollmentResponse {}

message PutContestCandidateExtraNumberOfVotesRequest {
	string id = 1;
  int32 extra_number_of_votes = 2;
}
message PutContestCandidateExtraNumberOfVotesResponse {}

message DeleteContestCandidateRequest {
	string id = 1;
}
message DeleteContestCandidateResponse {}

message Vote {
	string id = 1;
	string user_id = 2;
	string candidate_id = 3;
	string pet_id = 4;
	string contest_id = 5;
}

message PostVoteRequest {
	Vote vote = 1;
}
message PostVoteResponse {}

message GetVotesRequest {
	string contest_id = 1;
}
message GetVotesResponse {
	repeated Vote votes = 1;
}

message DeleteVoteRequest {
	Vote vote = 1;
}
message DeleteVoteResponse {
}